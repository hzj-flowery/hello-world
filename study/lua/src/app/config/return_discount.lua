--return_discount

-- key
local __key_map = {
  id = 1,    --编号-int 
  vip_min = 2,    --VIP等级下限-int 
  vip_max = 3,    --VIP等级上限-int 
  day_min = 4,    --流失天数下限-int 
  day_max = 5,    --流失天数上限-int 
  is_work = 6,    --是否生效-int 
  txt = 7,    --显示用文本-string 
  reward_type = 8,    --类型-int 
  vip_pay_id = 9,    --价格id-int 
  price = 10,    --价格-int 
  reward_type1 = 11,    --奖励类型1-int 
  reward_value1 = 12,    --奖励类型值1-int 
  reward_size1 = 13,    --奖励数量1-int 
  reward_type2 = 14,    --奖励类型2-int 
  reward_value2 = 15,    --奖励类型值2-int 
  reward_size2 = 16,    --奖励数量2-int 
  reward_type3 = 17,    --奖励类型3-int 
  reward_value3 = 18,    --奖励类型值3-int 
  reward_size3 = 19,    --奖励数量3-int 
  time = 20,    --领取/购买次数-int 
  is_choose = 21,    --领取方式-int 
  recover = 22,    --刷新方式-int 
  show_money = 23,    --显示条件-int 

}

-- data
local return_discount = {
    _data = {
        [1] = {1,0,16,0,9999,1,"累积充值#num#",2,0,4000,6,148,1,6,158,1,6,157,1,1,1,0,0,},
        [2] = {2,0,16,0,9999,1,"累积充值#num#",2,0,7000,6,148,1,6,158,1,6,157,1,1,1,0,4000,},
        [3] = {3,0,16,0,9999,1,"累积充值#num#",2,0,10000,6,148,1,6,158,1,6,157,1,1,1,0,7000,},
        [4] = {4,0,16,14,28,1,"奇珍异宝任选箱",1,10130,30,6,165,5,0,0,0,0,0,0,15,0,0,0,},
        [5] = {5,0,16,14,28,1,"春秋战国任选箱",1,10131,98,6,146,4,0,0,0,0,0,0,5,0,0,0,},
        [6] = {6,0,16,14,28,1,"橙色锦囊任选箱",1,10132,198,6,118,1,0,0,0,0,0,0,10,0,0,0,},
        [7] = {7,0,16,14,28,1,"稀有精炼石",1,10133,98,6,14,70,0,0,0,0,0,0,5,0,0,0,},
        [8] = {8,0,16,14,28,1,"红色万能神兵",1,10134,298,6,81,9,0,0,0,0,0,0,10,0,0,0,},
        [9] = {9,0,16,14,28,1,"红色锦囊任选箱",1,10135,648,6,139,1,0,0,0,0,0,0,5,0,0,0,},
        [10] = {10,0,16,14,28,1,"礼记周易任选箱",1,10136,648,6,162,8,0,0,0,0,0,0,5,0,0,0,},
        [11] = {11,0,16,14,28,1,"原石任选箱",1,10137,648,6,705,1,0,0,0,0,0,0,5,0,0,0,},
        [12] = {12,0,16,29,42,1,"奇珍异宝任选箱",1,10130,30,6,165,5,0,0,0,0,0,0,30,0,0,0,},
        [13] = {13,0,16,29,42,1,"春秋战国任选箱",1,10131,98,6,146,4,0,0,0,0,0,0,10,0,0,0,},
        [14] = {14,0,16,29,42,1,"橙色锦囊任选箱",1,10132,198,6,118,1,0,0,0,0,0,0,20,0,0,0,},
        [15] = {15,0,16,29,42,1,"稀有精炼石",1,10133,98,6,14,70,0,0,0,0,0,0,10,0,0,0,},
        [16] = {16,0,16,29,42,1,"红色万能神兵",1,10134,298,6,81,9,0,0,0,0,0,0,20,0,0,0,},
        [17] = {17,0,16,29,42,1,"红色锦囊任选箱",1,10135,648,6,139,1,0,0,0,0,0,0,10,0,0,0,},
        [18] = {18,0,16,29,42,1,"礼记周易任选箱",1,10136,648,6,162,8,0,0,0,0,0,0,10,0,0,0,},
        [19] = {19,0,16,29,42,1,"原石任选箱",1,10137,648,6,705,1,0,0,0,0,0,0,10,0,0,0,},
        [20] = {20,0,16,43,9999,1,"奇珍异宝任选箱",1,10130,30,6,165,5,0,0,0,0,0,0,45,0,0,0,},
        [21] = {21,0,16,43,9999,1,"春秋战国任选箱",1,10131,98,6,146,4,0,0,0,0,0,0,15,0,0,0,},
        [22] = {22,0,16,43,9999,1,"橙色锦囊任选箱",1,10132,198,6,118,1,0,0,0,0,0,0,30,0,0,0,},
        [23] = {23,0,16,43,9999,1,"稀有精炼石",1,10133,98,6,14,70,0,0,0,0,0,0,15,0,0,0,},
        [24] = {24,0,16,43,9999,1,"红色万能神兵",1,10134,298,6,81,9,0,0,0,0,0,0,30,0,0,0,},
        [25] = {25,0,16,43,9999,1,"红色锦囊任选箱",1,10135,648,6,139,1,0,0,0,0,0,0,15,0,0,0,},
        [26] = {26,0,16,43,9999,1,"礼记周易任选箱",1,10136,648,6,162,8,0,0,0,0,0,0,15,0,0,0,},
        [27] = {27,0,16,43,9999,1,"原石任选箱",1,10137,648,6,705,1,0,0,0,0,0,0,15,0,0,0,},
    }
}

-- index
local __index_id = {
    [1] = 1,
    [10] = 10,
    [11] = 11,
    [12] = 12,
    [13] = 13,
    [14] = 14,
    [15] = 15,
    [16] = 16,
    [17] = 17,
    [18] = 18,
    [19] = 19,
    [2] = 2,
    [20] = 20,
    [21] = 21,
    [22] = 22,
    [23] = 23,
    [24] = 24,
    [25] = 25,
    [26] = 26,
    [27] = 27,
    [3] = 3,
    [4] = 4,
    [5] = 5,
    [6] = 6,
    [7] = 7,
    [8] = 8,
    [9] = 9,

}

-- metatable
local mt = { 
    __index = function(t, k) 
        assert(__key_map[k], "cannot find " .. k .. " in return_discount")
        return t._raw[__key_map[k]]
    end
}

-- 
function return_discount.length()
    return #return_discount._data
end

-- 
function return_discount.hasKey(k)
    if __key_map[k] == nil then
        return false
    else
        return true
    end
end

--
function return_discount.indexOf(index)
    if index == nil or not return_discount._data[index] then
        return nil
    end

    return setmetatable({_raw = return_discount._data[index]}, mt)
end

--
function return_discount.get(id)
    
    return return_discount.indexOf(__index_id[id])
        
end

--
function return_discount.set(id, tkey, nvalue)
    local record = return_discount.get(id)
    if record then
        local keyIndex = __key_map[tkey]
        if keyIndex then
            record._raw[keyIndex] = nvalue
        end
    end
end

--
function return_discount.index()
    return __index_id
end

return return_discount